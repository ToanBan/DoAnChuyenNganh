"use client";

import React, { useState, useEffect, useRef, use } from "react";
import Image from "next/image";
import NavigationMain from "./components/share/NavigationMain";
import { Swiper, SwiperSlide } from "swiper/react";
import { Navigation, Pagination, Autoplay } from "swiper/modules";
import styles from "./page.module.css";
import "swiper/css";
import "swiper/css/navigation";
import "swiper/css/pagination";
import Footer from "./components/share/Footer";
import Link from "next/link";
import AOS from "aos";
import "aos/dist/aos.css";
import GetCourse from "./api/GetCourse";
import { useCart } from "./context/CartContext";
import AlertSuccess from "./components/share/alert_success";

interface Slide {
  title: string;
  desc: string;
  buttonText: string;
  bgImage: string;
  secondaryButtonText?: string;
  secondaryButtonLink?: string;
}

const slides: Slide[] = [
  {
    title: "H·ªçc H·ªèi M·ªçi L√∫c, M·ªçi N∆°i",
    desc: "Kh√°m ph√° h√†ng ng√†n kh√≥a h·ªçc ch·∫•t l∆∞·ª£ng cao t·ª´ c√°c chuy√™n gia h√†ng ƒë·∫ßu th·∫ø gi·ªõi. N√¢ng t·∫ßm ki·∫øn th·ª©c v√† k·ªπ nƒÉng c·ªßa b·∫°n ngay h√¥m nay!",
    buttonText: "Kh√°m Ph√° Kh√≥a H·ªçc",
    bgImage: "https://themewagon.github.io/ultras/images/banner1.jpg", // Placeholder
    secondaryButtonText: "T√¨m Hi·ªÉu Th√™m",
    secondaryButtonLink: "#",
  },
  {
    title: "Ph√°t Tri·ªÉn K·ªπ NƒÉng M·ªõi",
    desc: "V·ªõi c√°c kh√≥a h·ªçc ƒëa d·∫°ng t·ª´ c√¥ng ngh·ªá, kinh doanh ƒë·∫øn s√°ng t·∫°o, b·∫°n s·∫Ω lu√¥n t√¨m th·∫•y ƒëi·ªÅu m√¨nh c·∫ßn.",
    buttonText: "Kh√°m Ph√° Kh√≥a H·ªçc",
    bgImage: "https://themewagon.github.io/famms/images/slider-bg.jpg", // Placeholder
    secondaryButtonText: "T√¨m Hi·ªÉu Th√™m",
    secondaryButtonLink: "#",
  },
];

interface Course {
  id: number;
  course_description: string;
  price: string;
  course_image: string;
  course_name: string;
  teacher: {
    name: string;
  };
}

interface WhyUsItem {
  icon: string;
  title: string;
  description: string;
}

const whyUsItems: WhyUsItem[] = [
  {
    icon: "‚ú®",
    title: "N·ªôi Dung Ch·∫•t L∆∞·ª£ng Cao",
    description:
      "C√°c kh√≥a h·ªçc ƒë∆∞·ª£c x√¢y d·ª±ng b·ªüi ƒë·ªôi ng≈© chuy√™n gia h√†ng ƒë·∫ßu, ƒë·∫£m b·∫£o ki·∫øn th·ª©c chuy√™n s√¢u v√† t√≠nh ·ª©ng d·ª•ng cao.",
  },
  {
    icon: "üöÄ",
    title: "L·ªô Tr√¨nh H·ªçc T·∫≠p C√° Nh√¢n H√≥a",
    description:
      "H·ªá th·ªëng g·ª£i √Ω th√¥ng minh gi√∫p b·∫°n t√¨m ƒë∆∞·ª£c kh√≥a h·ªçc ph√π h·ª£p nh·∫•t v·ªõi m·ª•c ti√™u v√† tr√¨nh ƒë·ªô c·ªßa m√¨nh.",
  },
  {
    icon: "üí¨",
    title: "C·ªông ƒê·ªìng H·ªó Tr·ª£ T·∫≠n T√¨nh",
    description:
      "Tham gia di·ªÖn ƒë√†n s√¥i n·ªïi, nh·∫≠n h·ªó tr·ª£ tr·ª±c ti·∫øp t·ª´ gi·∫£ng vi√™n v√† k·∫øt n·ªëi v·ªõi h√†ng ng√†n h·ªçc vi√™n kh√°c.",
  },
];

interface Testimonial {
  quote: string;
  author: string;
  course: string;
  avatarUrl: string;
}

const testimonials: Testimonial[] = [
  {
    quote:
      '"Kh√≥a h·ªçc l·∫≠p tr√¨nh web th·ª±c s·ª± tuy·ªát v·ªùi! T√¥i ƒë√£ h·ªçc ƒë∆∞·ª£c r·∫•t nhi·ªÅu ki·∫øn th·ª©c b·ªï √≠ch v√† c√≥ th·ªÉ t·ª± tin x√¢y d·ª±ng trang web c·ªßa ri√™ng m√¨nh."',
    author: "Nguy·ªÖn VƒÉn A",
    course: "L·∫≠p Tr√¨nh Web",
    avatarUrl: "https://placehold.co/60x60/6366f1/FFFFFF?text=AVT",
  },
  {
    quote:
      '"N·ªôi dung kh√≥a h·ªçc marketing s·ªë r·∫•t chi ti·∫øt v√† d·ªÖ hi·ªÉu. T√¥i ƒë√£ √°p d·ª•ng ƒë∆∞·ª£c ngay v√†o c√¥ng vi·ªác v√† th·∫•y hi·ªáu qu·∫£ r√µ r·ªát."',
    author: "Tr·∫ßn Th·ªã B",
    course: "Marketing S·ªë",
    avatarUrl: "https://placehold.co/60x60/8b5cf6/FFFFFF?text=AVT",
  },
];

export default function Home() {
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState<boolean>(false);
  const [courses, setCourses] = useState<Course[] | []>([]);
  const [suggestionCourse, setSuggestionCourse] = useState<Course[]>([]);
  const [success, setSuccess] = useState(false);
  const { refreshCartCount } = useCart();
  const imageCourse = "http://localhost:5000/uploads/";
  useEffect(() => {
    AOS.init({
      duration: 1000,
      once: false,
      easing: "ease-out-cubic",
    });

    AOS.refresh();
  }, []);

  const GetSuggestionCourse = async () => {
    const res = await fetch("http://localhost:5000/api/suggestion", {
      method: "GET",
      credentials: "include",
      headers: {
        "Content-Type": "application/json",
      },
    });
    const data = await res.json();
    setSuggestionCourse(data.message);
  };

  useEffect(() => {
    const fetchCourses = async () => {
      const data = await GetCourse();
      setCourses(data);
    };
    fetchCourses();
  }, []);

  useEffect(() => {
    GetSuggestionCourse();
  }, []);

  const toggleMobileMenu = (): void => {
    setIsMobileMenuOpen(!isMobileMenuOpen);
  };

  const closeMobileMenu = (): void => {
    setIsMobileMenuOpen(false);
  };

  const handleAddToCart = async (courseId: number) => {
    const res = await fetch("http://localhost:5000/api/cart/add", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ courseId, quantity: 1 }),
      credentials: "include",
    });

    const data = await res.json();
    if (res.ok) {
      setSuccess(true);
      setTimeout(() => {
        setSuccess(false);
      }, 3000);
      await refreshCartCount();
      window.dispatchEvent(new Event("cart-updated"));
    } else {
      alert(data.message || "C√≥ l·ªói x·∫£y ra!");
    }
  };

  return (
    <div className="d-flex flex-column min-vh-100">
      <style>
        {`
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600;700;800&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f8fafc;
            color: #334155;
        }
        .hero-section-bg {
            position: relative;
            overflow: hidden;
            background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%); /* Apply gradient directly here */
        }
        .hero-section-bg::before {
            content: '';
            position: absolute;
            top: -50px;
            left: -50px;
            width: 200px;
            height: 200px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            animation: moveCircle1 15s infinite alternate;
        }
        .hero-section-bg::after {
            content: '';
            position: absolute;
            bottom: -50px;
            right: -50px;
            width: 150px;
            height: 150px;
            background: rgba(255, 255, 255, 0.15);
            border-radius: 50%;
            animation: moveCircle2 12s infinite alternate;
        }
        @keyframes moveCircle1 {
            0% { transform: translate(0, 0); }
            50% { transform: translate(50px, 50px); }
            100% { transform: translate(0, 0); }
        }
        @keyframes moveCircle2 {
            0% { transform: translate(0, 0); }
            50% { transform: translate(-40px, -40px); }
            100% { transform: translate(0, 0); }
        }

        .course-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .course-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }
        .testimonial-card {
            background-color: white;
            border-radius: 1rem;
            padding: 2rem;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            transition: transform 0.3s ease;
        }
        .testimonial-card:hover {
            transform: scale(1.02);
        }

        .btn-primary-custom {
            background-color: #f97316;
            color: white;
            padding: 0.75rem 2rem;
            border-radius: 9999px;
            font-weight: 600;
            transition: background-color 0.3s ease, transform 0.2s ease;
            border: none;
        }
        .btn-primary-custom:hover {
            background-color: #ea580c;
            transform: translateY(-2px);
        }
        .btn-secondary-custom {
            background-color: transparent;
            color: white;
            border: 2px solid white;
            padding: 0.75rem 2rem;
            border-radius: 9999px;
            font-weight: 600;
            transition: background-color 0.3s ease, color 0.3s ease;
        }
        .btn-secondary-custom:hover {
            background-color: white;
            color: #6366f1;
        }

        .why-us-card {
            background: white;
            border-radius: 1.5rem;
            padding: 2.5rem;
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            border: 1px solid #e2e8f0;
        }
        .why-us-card:hover {
            transform: translateY(-8px) scale(1.01);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
        }
        .why-us-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 6px;
            background: linear-gradient(90deg, #6366f1, #8b5cf6);
            transition: height 0.3s ease;
        }
        .why-us-card:hover::before {
            height: 10px;
        }
        .why-us-icon {
            font-size: 4rem;
            margin-bottom: 1.5rem;
            display: inline-block;
            background: linear-gradient(45deg, #6366f1, #8b5cf6);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            /* Animation applied by AOS, no need for custom keyframe here */
        }

        /* Swiper Customizations (Adjusted for Bootstrap compatibility) */
        .swiper-button-prev, .swiper-button-next {
            width: 50px !important;
            height: 50px !important;
            background-color: rgba(255, 255, 255, 0.6) !important;
            border-radius: 50% !important;
            color: #334155 !important;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1) !important;
            transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease !important;
            top: 50% !important;
            transform: translateY(-50%) !important;
        }
        .swiper-button-prev:hover, .swiper-button-next:hover {
            background-color: rgba(255, 255, 255, 0.8) !important;
            transform: translateY(-50%) scale(1.05) !important;
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2) !important;
        }
        .swiper-button-prev::after, .swiper-button-next::after {
            font-size: 1.5rem !important;
            font-weight: bold !important;
            color: #334155 !important;
        }
        .swiper-button-prev {
            left: 1rem !important;
        }
        .swiper-button-next {
            right: 1rem !important;
        }

        .swiper-pagination-bullet {
            width: 10px !important;
            height: 10px !important;
            background-color: rgba(255, 255, 255, 0.5) !important;
            opacity: 1 !important;
            transition: background-color 0.3s ease, width 0.3s ease, height 0.3s ease !important;
        }
        .swiper-pagination-bullet-active {
            background-color: white !important;
            width: 12px !important;
            height: 12px !important;
        }
        `}
      </style>

      <NavigationMain />

      <section className="position-relative" style={{ height: "580px" }}>
        <Swiper
          modules={[Navigation, Pagination, Autoplay]}
          spaceBetween={0}
          slidesPerView={1}
          navigation // Enables prev/next buttons
          pagination={{ clickable: true }} // Enables pagination dots
          autoplay={{
            delay: 5000,
            disableOnInteraction: false,
          }}
          loop={true}
          speed={800}
          className="w-100 h-100 hero-section-bg" // Apply hero-section-bg to Swiper container
        >
          {slides.map((slide, index) => (
            <SwiperSlide
              key={index}
              className="d-flex align-items-center justify-content-center text-center text-white"
              style={{
                backgroundImage: `linear-gradient(rgba(0,0,0,0.4), rgba(0,0,0,0.4)), url(${slide.bgImage})`,
                backgroundSize: "cover",
                backgroundPosition: "center",
              }}
            >
              <div
                className="mx-auto px-4 position-relative z-10"
                style={{ maxWidth: "800px" }}
              >
                <h1 className="display-4 fw-bolder mb-4">{slide.title}</h1>
                <p className="lead mb-5 opacity-90">{slide.desc}</p>
                <div className="d-flex flex-column flex-sm-row justify-content-center gap-3">
                  <Link
                    href={"/courses"}
                    className="btn-primary-custom text-decoration-none"
                  >
                    {" "}
                    {slide.buttonText}
                  </Link>
                  <Link
                    href={"/about"}
                    className="btn-secondary-custom text-decoration-none"
                  >
                    {" "}
                    {slide.secondaryButtonText}
                  </Link>
                </div>
              </div>
            </SwiperSlide>
          ))}
        </Swiper>
      </section>
      {/**Recommendation Course */}
      {Array.isArray(suggestionCourse) && suggestionCourse.length > 0 ? (
        <section className={styles.sectionDark}>
          <h2 className={styles.sectionTitle} data-aos="fade-up">
            Kh√≥a h·ªçc b·∫°n c√≥ th·ªÉ th√≠ch
          </h2>
          <div className={styles.courseGrid}>
            {suggestionCourse.map((c, index) => (
              <div
                key={c.id}
                className={styles.courseCard}
                data-aos="zoom-in"
                data-aos-delay={index * 100}
              >
                <Image
                  src={`${imageCourse}${c.course_image}`}
                  width={400}
                  height={225}
                  alt={c.course_name}
                  className={styles.courseImage}
                  style={{ width: "100%", objectFit: "cover" }}
                />
                <div className={styles.courseInfo}>
                  <h3>{c.course_name}</h3>
                  <p>{Number(c.price).toLocaleString("vi-VN")} VND</p>
                  <p>Gi·∫£ng vi√™n: {c.teacher.name}</p>
                  <div className={styles.courseActions}>
                    <Link
                      className={`text-decoration-none ${styles.btnSecondary}`}
                      href={`/courses/${c.id}`}
                    >
                      Xem Chi Ti·∫øt
                    </Link>
                    <button
                      onClick={() => handleAddToCart(c.id)}
                      className={styles.btnRed}
                    >
                      Th√™m Gi·ªè H√†ng
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </section>
      ) : (
        <></>
      )}

      <section className={styles.sectionDark}>
        <h2 className={styles.sectionTitle} data-aos="fade-up">
          Kh√≥a h·ªçc n·ªïi b·∫≠t
        </h2>
        <div className={styles.courseGrid}>
          {courses.slice(0, 3).map((c, index) => (
            <div
              key={c.id}
              className={styles.courseCard}
              data-aos="zoom-in"
              data-aos-delay={index * 100}
            >
              <Image
                src={`${imageCourse}${c.course_image}`}
                width={400}
                height={225}
                alt={c.course_name}
                className={styles.courseImage}
                style={{ width: "100%", objectFit: "cover" }}
              />
              <div className={styles.courseInfo}>
                <h3>{c.course_name}</h3>
                <p>{Number(c.price).toLocaleString("vi-VN")} VND</p>
                <p>Gi·∫£ng vi√™n: {c.teacher.name}</p>
                <div className={styles.courseActions}>
                  <Link
                    className={`text-decoration-none ${styles.btnSecondary}`}
                    href={`/courses/${c.id}`}
                  >
                    Xem Chi Ti·∫øt
                  </Link>
                  <button
                    onClick={() => handleAddToCart(c.id)}
                    className={styles.btnRed}
                  >
                    Th√™m Gi·ªè H√†ng
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>

      {/* Why Choose Us Section */}
      <section className="py-5 bg-gradient-to-br from-indigo-50 to-purple-50">
        <div className="container text-center">
          <h2 className="mb-5 fw-bolder text-gray-900 fs-2" data-aos="fade-up">
            T·∫°i Sao Ch·ªçn <span className="text-indigo-600">CourseBase</span>?
          </h2>
          <div className="row row-cols-1 row-cols-md-3 g-4">
            {whyUsItems.map((item, index) => (
              <div
                key={index}
                className="col"
                data-aos="fade-up"
                data-aos-delay={index * 150}
              >
                <div className="why-us-card h-100">
                  <div className="why-us-icon">{item.icon}</div>
                  <h3 className="fs-4 fw-bold mb-3 text-gray-800">
                    {item.title}
                  </h3>
                  <p className="text-gray-600 lh-base">{item.description}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Testimonials Section */}
      <section className="py-5 bg-white">
        <div className="container">
          <h2
            className="text-center mb-5 fw-bold text-gray-800 fs-2"
            data-aos="fade-up"
          >
            H·ªçc Vi√™n N√≥i G√¨ V·ªÅ Ch√∫ng T√¥i
          </h2>
          <div className="row row-cols-1 row-cols-md-2 g-4">
            {testimonials.map((testimonial, index) => (
              <div
                key={index}
                className="col"
                data-aos="fade-up"
                data-aos-delay={index * 150}
              >
                <div className="testimonial-card h-100">
                  <p className="text-gray-700 lh-base mb-4">
                    {testimonial.quote}
                  </p>
                  <div className="d-flex align-items-center">
                    <img
                      src={testimonial.avatarUrl}
                      alt={`Avatar c·ªßa ${testimonial.author}`}
                      className="rounded-circle me-3"
                      style={{ width: "48px", height: "48px" }}
                    />
                    <div>
                      <p className="fw-semibold text-gray-800 mb-0">
                        {testimonial.author}
                      </p>
                      <p className="small text-gray-500 mb-0">
                        H·ªçc vi√™n kh√≥a {testimonial.course}
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Call to Action Section */}
      <section
        className="py-5 bg-indigo-700 text-white text-center bg-primary"
        data-aos="fade-up"
      >
        <div className="container">
          <h2 className="mb-4 fw-bold fs-2">
            S·∫µn S√†ng B·∫Øt ƒê·∫ßu H√†nh Tr√¨nh H·ªçc T·∫≠p C·ªßa B·∫°n?
          </h2>
          <p
            className="lead mb-5 opacity-90 mx-auto"
            style={{ maxWidth: "800px" }}
          >
            ƒê·ª´ng ch·∫ßn ch·ª´ n·ªØa! ƒêƒÉng k√Ω ngay h√¥m nay ƒë·ªÉ nh·∫≠n ∆∞u ƒë√£i ƒë·∫∑c bi·ªát v√†
            b·∫Øt ƒë·∫ßu kh√°m ph√° th·∫ø gi·ªõi tri th·ª©c.
          </p>
          <a
            href="#"
            className="btn-primary-custom px-5 py-3 fs-5 text-decoration-none"
            data-aos="zoom-in"
            data-aos-delay="300"
          >
            ƒêƒÉng K√Ω Ngay
          </a>
        </div>
      </section>

      {success && <AlertSuccess message="Th√™m Gi·ªè H√†ng Th√†nh C√¥ng" />}
      <Footer />
    </div>
  );
}
